// <auto-generated />
using System;
using GraphQl.DATA.API.PO.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GraphQl.DATA.API.Migrations.po
{
    [DbContext(typeof(poContext))]
    partial class poContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.Automumber", b =>
                {
                    b.Property<int?>("ExpenseId")
                        .HasColumnType("int")
                        .HasColumnName("ExpenseID");

                    b.ToTable("automumber");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.Automumber1", b =>
                {
                    b.Property<int?>("ExpenseId")
                        .HasColumnType("int")
                        .HasColumnName("ExpenseID");

                    b.ToTable("automumber", "nexionau_crm");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.CMAdminModuleMaster", b =>
                {
                    b.Property<int>("Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Creation_Date");

                    b.Property<int>("CuserId")
                        .HasColumnType("int")
                        .HasColumnName("CUser_Id");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Modification_Date");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("Module_Id");

                    b.Property<string>("ModuleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ModuleOrder")
                        .HasColumnType("int");

                    b.Property<int>("MuserId")
                        .HasColumnType("int")
                        .HasColumnName("MUser_Id");

                    b.HasKey("Rid");

                    b.ToTable("CM_AdminModuleMaster");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.CMAdminSubModuleMaster", b =>
                {
                    b.Property<int>("Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Creation_Date");

                    b.Property<int>("CuserId")
                        .HasColumnType("int")
                        .HasColumnName("CUser_Id");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Modification_Date");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("Module_Id");

                    b.Property<int>("MuserId")
                        .HasColumnType("int")
                        .HasColumnName("MUser_Id");

                    b.Property<string>("NavigationUrl")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("SubModuleId")
                        .HasColumnType("int")
                        .HasColumnName("SubModule_Id");

                    b.Property<string>("SubModuleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("SubModuleOrder")
                        .HasColumnType("int");

                    b.Property<string>("TargetModule")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Rid");

                    b.ToTable("CM_AdminSubModuleMaster");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.ChartstempTable", b =>
                {
                    b.Property<double?>("Approved")
                        .HasColumnType("float");

                    b.Property<double?>("Complate")
                        .HasColumnType("float");

                    b.Property<double?>("Submit")
                        .HasColumnType("float");

                    b.Property<string>("Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("ChartstempTable");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.ChartstempTable1", b =>
                {
                    b.Property<double?>("Approved")
                        .HasColumnType("float");

                    b.Property<double?>("Complate")
                        .HasColumnType("float");

                    b.Property<double?>("Submit")
                        .HasColumnType("float");

                    b.Property<string>("Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("ChartstempTable", "nexionau_crm");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.ExpenseGroup", b =>
                {
                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("EgroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("EGroupId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EgroupName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("EGroupName");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("smalldatetime");

                    b.ToTable("ExpenseGroup");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.ExpenseHead", b =>
                {
                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("ExpenseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("PeriodForm")
                        .HasColumnType("date");

                    b.Property<DateTime?>("PeriodTo")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("WorkOrderId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("ExpenseHead");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.ExpenseItem", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<double?>("Amt")
                        .HasColumnType("float")
                        .HasColumnName("AMt");

                    b.Property<double?>("ApprovedAmount")
                        .HasColumnType("float");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("Date ");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<double?>("Distance")
                        .HasColumnType("float");

                    b.Property<int?>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<long>("ExpenseItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExpenseTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PaidBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("ParkingAmt")
                        .HasColumnType("float");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("smalldatetime");

                    b.ToTable("ExpenseItems");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.ExpenseItemAttachment", b =>
                {
                    b.Property<int>("AttchmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("ExpenseId")
                        .HasColumnType("int")
                        .HasColumnName("ExpenseID");

                    b.Property<string>("ImagDescription")
                        .HasMaxLength(356)
                        .HasColumnType("nvarchar(356)")
                        .HasColumnName("imagDescription");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("ExpenseItemAttachment");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.ExpenseItemAttachment1", b =>
                {
                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("ExpenseId")
                        .HasColumnType("int")
                        .HasColumnName("ExpenseID");

                    b.Property<long>("ExpenseItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagDescription")
                        .HasMaxLength(356)
                        .HasColumnType("nvarchar(356)")
                        .HasColumnName("imagDescription");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("ExpenseItemAttachment1");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.ExpenseItemAttachment2", b =>
                {
                    b.Property<int>("AttchmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("ExpenseId")
                        .HasColumnType("int")
                        .HasColumnName("ExpenseID");

                    b.Property<string>("ImagDescription")
                        .HasMaxLength(356)
                        .HasColumnType("nvarchar(356)")
                        .HasColumnName("imagDescription");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("ExpenseItemAttachment", "nexionau_crm");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.ExpenseStatusMaster", b =>
                {
                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("smalldatetime");

                    b.ToTable("ExpenseStatusMaster");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.ExpenseStatusState", b =>
                {
                    b.Property<string>("Comments")
                        .HasMaxLength(356)
                        .IsUnicode(false)
                        .HasColumnType("varchar(356)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<long>("Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("RID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("smalldatetime");

                    b.ToTable("ExpenseStatusState");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.ExpenseType", b =>
                {
                    b.Property<bool?>("Amt")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long?>("EgroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("EGroupId");

                    b.Property<long>("ExpenseTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Km")
                        .HasColumnType("bit");

                    b.Property<bool?>("Park")
                        .HasColumnType("bit");

                    b.Property<int?>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("datetime");

                    b.ToTable("ExpenseTypes");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.LempColorMaster", b =>
                {
                    b.Property<string>("Color")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("color");

                    b.Property<string>("UserCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_code");

                    b.ToTable("LEmp_colorMaster");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.LempLeaveEmp", b =>
                {
                    b.Property<string>("ApprovelId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Approvel_Id");

                    b.Property<string>("ApprovelStatus")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Approvel_status");

                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("datetime")
                        .HasColumnName("createdBy");

                    b.Property<string>("CreatedTo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createdTo");

                    b.Property<string>("Days")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DAYs");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime")
                        .HasColumnName("From_date");

                    b.Property<string>("LeaveReasion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Leave_reasion");

                    b.Property<string>("LeaveTypes")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Leave_types");

                    b.Property<int>("Leid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("leid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NumberOfDay")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Number_of_day");

                    b.Property<string>("RemainingOfDay")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Remaining_of_day");

                    b.Property<string>("StatusUser")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("status_user");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime")
                        .HasColumnName("To_date");

                    b.ToTable("LEmp_LeaveEmp");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.LempLeaveSetting", b =>
                {
                    b.Property<string>("AnnualLeave")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Annual_leave");

                    b.Property<string>("CarryForward")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("carry_forward");

                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("datetime")
                        .HasColumnName("created_by");

                    b.Property<string>("CreatedOn")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_on");

                    b.Property<int>("LsetId")
                        .HasColumnType("int")
                        .HasColumnName("lset_id");

                    b.ToTable("LEmp_leave_setting");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.LempLeavemaster", b =>
                {
                    b.Property<int?>("Alloted")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("color");

                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("datetime")
                        .HasColumnName("created_by");

                    b.Property<string>("CreatedOn")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_on");

                    b.Property<string>("LeaveType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("leave_type");

                    b.Property<int>("LmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lm_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.ToTable("LEmp_Leavemaster");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.LempStatusmaster", b =>
                {
                    b.Property<string>("Comment")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("datetime")
                        .HasColumnName("created_by");

                    b.Property<string>("CreatedOn")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_on");

                    b.Property<string>("LmId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("lm_id");

                    b.Property<int>("SId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("status");

                    b.ToTable("LEmp_Statusmaster");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.LocalExpenseHead", b =>
                {
                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("ExpenseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("PeriodForm")
                        .HasColumnType("date");

                    b.Property<DateTime?>("PeriodTo")
                        .HasColumnType("date");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("smalldatetime");

                    b.ToTable("Local_ExpenseHead");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.LocalExpenseItem", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<double?>("Amt")
                        .HasColumnType("float")
                        .HasColumnName("AMt");

                    b.Property<double?>("ApprovedAmount")
                        .HasColumnType("float");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<int?>("Distance")
                        .HasColumnType("int");

                    b.Property<int?>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<long>("ExpenseItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FromLocation")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<double?>("ParkingAmt")
                        .HasColumnType("float");

                    b.Property<string>("Purpose")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ToLocation")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("TransportTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("smalldatetime");

                    b.ToTable("Local_ExpenseItems");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.LocalExpenseStatusState", b =>
                {
                    b.Property<string>("Comments")
                        .HasMaxLength(356)
                        .IsUnicode(false)
                        .HasColumnType("varchar(356)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<long>("Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("RID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("smalldatetime");

                    b.ToTable("Local_ExpenseStatusState");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.NempBankDetail", b =>
                {
                    b.Property<string>("AccountNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BankName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BD_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Branch_address");

                    b.Property<DateTime?>("Createdby")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("createdby");

                    b.Property<string>("IfscCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("IFsc_code");

                    b.Property<int?>("PdId")
                        .HasColumnType("int")
                        .HasColumnName("PD_id");

                    b.ToTable("NEmp_BankDetail");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.NempBankDetail1", b =>
                {
                    b.Property<string>("AccountNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BankName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BdId")
                        .HasColumnType("int")
                        .HasColumnName("BD_id");

                    b.Property<string>("BranchAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Branch_address");

                    b.Property<DateTime?>("Createdby")
                        .HasColumnType("datetime")
                        .HasColumnName("createdby");

                    b.Property<string>("IfscCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("IFsc_code");

                    b.Property<int?>("PdId")
                        .HasColumnType("int")
                        .HasColumnName("PD_id");

                    b.ToTable("NEmp_BankDetail", "nexionau_crm");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.NempDocumentUplode", b =>
                {
                    b.Property<string>("AddharCard")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Addhar_card");

                    b.Property<DateTime?>("Createdby")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("createdby");

                    b.Property<int>("DuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DU_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EducationProof")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("education_proof");

                    b.Property<string>("ExperienceLetter")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("experience_letter");

                    b.Property<string>("NocLetter")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("noc_letter");

                    b.Property<int?>("PdId")
                        .HasColumnType("int")
                        .HasColumnName("PD_id");

                    b.Property<string>("Photo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("photo");

                    b.Property<string>("Voterid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("voterid");

                    b.ToTable("NEmp_DocumentUplode");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.NempDocumentUplode1", b =>
                {
                    b.Property<string>("AddharCard")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Addhar_card");

                    b.Property<DateTime?>("Createdby")
                        .HasColumnType("datetime")
                        .HasColumnName("createdby");

                    b.Property<int>("DuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DU_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EducationProof")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("education_proof");

                    b.Property<string>("ExperienceLetter")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("experience_letter");

                    b.Property<string>("NocLetter")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("noc_letter");

                    b.Property<int?>("PdId")
                        .HasColumnType("int")
                        .HasColumnName("PD_id");

                    b.Property<string>("Photo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("photo");

                    b.Property<string>("Voterid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("voterid");

                    b.ToTable("NEmp_DocumentUplode", "nexionau_crm");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.NempEmrcontacttwo", b =>
                {
                    b.Property<DateTime?>("Createdby")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("createdby");

                    b.Property<int>("EcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Ec_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HomeTel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Home_tel");

                    b.Property<string>("Medicalcondition")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("MedicalconditionDrop")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Medicalcondition_drop");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PdId")
                        .HasColumnType("int")
                        .HasColumnName("PD_id");

                    b.Property<string>("Personalmobile")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Relationship")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WorkMobile")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("NEmp_Emrcontacttwo");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.NempEmrcontacttwo1", b =>
                {
                    b.Property<DateTime?>("Createdby")
                        .HasColumnType("datetime")
                        .HasColumnName("createdby");

                    b.Property<int>("EcId")
                        .HasColumnType("int")
                        .HasColumnName("Ec_id");

                    b.Property<string>("HomeTel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Home_tel");

                    b.Property<string>("Medicalcondition")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("MedicalconditionDrop")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Medicalcondition_drop");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PdId")
                        .HasColumnType("int")
                        .HasColumnName("PD_id");

                    b.Property<string>("Personalmobile")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Relationship")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WorkMobile")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("NEmp_Emrcontacttwo", "nexionau_crm");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.NempEmrdetail", b =>
                {
                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Contact_address");

                    b.Property<DateTime?>("Createdby")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("createdby");

                    b.Property<int>("EdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ED_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HomeTel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Home_tel");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PdId")
                        .HasColumnType("int")
                        .HasColumnName("PD_id");

                    b.Property<string>("Personalmobile")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PostCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Post_code");

                    b.Property<string>("Relationship")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WorkMobile")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("NEmp_Emrdetail");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.NempEmrdetail1", b =>
                {
                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Contact_address");

                    b.Property<DateTime?>("Createdby")
                        .HasColumnType("datetime")
                        .HasColumnName("createdby");

                    b.Property<int>("EdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ED_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HomeTel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Home_tel");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PdId")
                        .HasColumnType("int")
                        .HasColumnName("PD_id");

                    b.Property<string>("Personalmobile")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PostCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Post_code");

                    b.Property<string>("Relationship")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WorkMobile")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("NEmp_Emrdetail", "nexionau_crm");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.NempPersonalDetail", b =>
                {
                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("FatherName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Father_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("HomeAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Home_address");

                    b.Property<string>("HomeTel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Home_tel");

                    b.Property<string>("Mobile")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MotherName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Mother_Name");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PD_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PostCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Post_code");

                    b.ToTable("NEmp_PersonalDetail");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.NempPersonalDetail1", b =>
                {
                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("FatherName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Father_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("HomeAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Home_address");

                    b.Property<string>("HomeTel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Home_tel");

                    b.Property<string>("Mobile")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MotherName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Mother_Name");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PD_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PostCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Post_code");

                    b.ToTable("NEmp_PersonalDetail", "nexionau_crm");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TblFile", b =>
                {
                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("DExpenseId")
                        .HasColumnType("int")
                        .HasColumnName("dExpenseID");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagDescription")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("imagDescription");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("tblFiles");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TmAdminModuleMaster", b =>
                {
                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Creation_Date");

                    b.Property<int>("CuserId")
                        .HasColumnType("int")
                        .HasColumnName("CUser_Id");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Modification_Date");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("Module_Id");

                    b.Property<string>("ModuleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ModuleOrder")
                        .HasColumnType("int");

                    b.Property<int>("MuserId")
                        .HasColumnType("int")
                        .HasColumnName("MUser_Id");

                    b.Property<int>("Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.ToTable("Tm_AdminModuleMaster");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TmAdminSubModuleMaster", b =>
                {
                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Creation_Date");

                    b.Property<int>("CuserId")
                        .HasColumnType("int")
                        .HasColumnName("CUser_Id");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Modification_Date");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("Module_Id");

                    b.Property<int>("MuserId")
                        .HasColumnType("int")
                        .HasColumnName("MUser_Id");

                    b.Property<string>("NavigationUrl")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SubModuleId")
                        .HasColumnType("int")
                        .HasColumnName("SubModule_Id");

                    b.Property<string>("SubModuleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("SubModuleOrder")
                        .HasColumnType("int");

                    b.ToTable("Tm_AdminSubModuleMaster");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TmAdminUserRightsMaster", b =>
                {
                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("CanExport")
                        .HasColumnType("bit");

                    b.Property<bool>("CanSave")
                        .HasColumnType("bit");

                    b.Property<bool>("CanSearch")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("CanView")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Creation_Date");

                    b.Property<int>("CuserId")
                        .HasColumnType("int")
                        .HasColumnName("CUser_Id");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("Group_Id");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Modification_Date");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("Module_Id");

                    b.Property<int>("MuserId")
                        .HasColumnType("int")
                        .HasColumnName("MUser_Id");

                    b.Property<int>("Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SubModuleId")
                        .HasColumnType("int")
                        .HasColumnName("SubModule_Id");

                    b.Property<int>("UserCode")
                        .HasColumnType("int")
                        .HasColumnName("User_Code");

                    b.ToTable("TM_Admin_UserRightsMaster");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TmCityMaster", b =>
                {
                    b.Property<int>("Citycode")
                        .HasColumnType("int")
                        .HasColumnName("CITYCODE");

                    b.Property<string>("Cityname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CITYNAME");

                    b.Property<DateTime>("Creationdate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("CREATIONDATE");

                    b.Property<string>("Deleted")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Editable")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime>("Modificationdate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("MODIFICATIONDATE");

                    b.Property<int>("Statecode")
                        .HasColumnType("int")
                        .HasColumnName("STATECODE");

                    b.Property<int>("Usercode")
                        .HasColumnType("int")
                        .HasColumnName("USERCODE");

                    b.ToTable("TM_CityMaster");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TmCompanyMaster", b =>
                {
                    b.Property<string>("Caddress1")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("CAddress1");

                    b.Property<string>("Caddress2")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("CAddress2");

                    b.Property<string>("Caddress3")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("CAddress3");

                    b.Property<string>("CemailId")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("CEmailID");

                    b.Property<string>("CmobileNo")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("CMobileNo");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Cphoto")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("CPhoto");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Creation_Date");

                    b.Property<int?>("CuserId")
                        .HasColumnType("int")
                        .HasColumnName("CUser_Id");

                    b.Property<string>("Cwebsite")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("CWebsite");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("DuserCode")
                        .HasColumnType("int")
                        .HasColumnName("DUserCode");

                    b.Property<string>("Iaddress1")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("IAddress1");

                    b.Property<string>("Iaddress2")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("IAddress2");

                    b.Property<string>("Iaddress3")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("IAddress3");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Igst")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("IGST");

                    b.Property<string>("ImobileNo")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("IMobileNo");

                    b.Property<string>("Iname")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("IName");

                    b.Property<string>("IpanNo")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("IPanNo");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Modification_Date");

                    b.Property<int?>("MuserId")
                        .HasColumnType("int")
                        .HasColumnName("MUser_Id");

                    b.Property<string>("ReasonForDeletion")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Recordstatus")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Saddress1")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("SAddress1");

                    b.Property<string>("Saddress2")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("SAddress2");

                    b.Property<string>("Saddress3")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("SAddress3");

                    b.Property<string>("SattendentName")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("SAttendentName");

                    b.Property<string>("SmobileNo")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("SMobileNo");

                    b.Property<string>("Sname")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("SName");

                    b.Property<string>("SpanNo")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("SPanNo");

                    b.ToTable("TM_CompanyMaster");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TmCountryMaster", b =>
                {
                    b.Property<int>("Countrycode")
                        .HasColumnType("int")
                        .HasColumnName("COUNTRYCODE");

                    b.Property<string>("Countryname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COUNTRYNAME");

                    b.Property<DateTime?>("Creationdate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("CREATIONDATE");

                    b.Property<string>("Deleted")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("DisplayAs")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Editable")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime?>("Modificationdate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("MODIFICATIONDATE");

                    b.Property<int?>("Usercode")
                        .HasColumnType("int")
                        .HasColumnName("USERCODE");

                    b.ToTable("TM_CountryMaster");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TmDashboard", b =>
                {
                    b.Property<int?>("ToTalPo")
                        .HasColumnType("int")
                        .HasColumnName("ToTalPO");

                    b.Property<double>("TotalPoAmount")
                        .HasColumnType("float");

                    b.Property<int?>("TotalPoToday")
                        .HasColumnType("int");

                    b.Property<double>("TotalPoTodayAmount")
                        .HasColumnType("float");

                    b.Property<int>("TotalUsers")
                        .HasColumnType("int");

                    b.ToTable("Tm_Dashboard");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TmDashboard1", b =>
                {
                    b.Property<int?>("ToTalPo")
                        .HasColumnType("int")
                        .HasColumnName("ToTalPO");

                    b.Property<double>("TotalPoAmount")
                        .HasColumnType("float");

                    b.Property<int?>("TotalPoToday")
                        .HasColumnType("int");

                    b.Property<double>("TotalPoTodayAmount")
                        .HasColumnType("float");

                    b.Property<int>("TotalUsers")
                        .HasColumnType("int");

                    b.ToTable("Tm_Dashboard", "nexionau_crm");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TmFinaicalYear", b =>
                {
                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Creation_Date");

                    b.Property<int?>("CuserId")
                        .HasColumnType("int")
                        .HasColumnName("CUser_Id");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date");

                    b.Property<int?>("Expenseid")
                        .HasColumnType("int")
                        .HasColumnName("EXPENSEid");

                    b.Property<string>("Fyname")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("FYname");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Modification_Date");

                    b.Property<int?>("MuserId")
                        .HasColumnType("int")
                        .HasColumnName("MUser_Id");

                    b.Property<int?>("PoNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.ToTable("TM_FinaicalYear");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TmGroupMaster", b =>
                {
                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Creation_Date");

                    b.Property<int?>("CuserId")
                        .HasColumnType("int")
                        .HasColumnName("CUser_Id");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("Group_Id");

                    b.Property<string>("GroupName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Group_Name");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Modification_Date");

                    b.Property<int?>("MuserId")
                        .HasColumnType("int")
                        .HasColumnName("MUser_Id");

                    b.Property<int>("Rid")
                        .HasColumnType("int")
                        .HasColumnName("RID");

                    b.ToTable("Tm_GroupMaster");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TmPurchaseBody", b =>
                {
                    b.Property<string>("Catname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("catname");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Creation_Date");

                    b.Property<int?>("CuserId")
                        .HasColumnType("int")
                        .HasColumnName("CUser_Id");

                    b.Property<string>("Description")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<double?>("Dis")
                        .HasColumnType("float")
                        .HasColumnName("DIS");

                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("ListPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Modification_Date");

                    b.Property<int?>("MuserId")
                        .HasColumnType("int")
                        .HasColumnName("MUser_Id");

                    b.Property<double?>("NetPrice")
                        .HasColumnType("float");

                    b.Property<int?>("PoId")
                        .HasColumnType("int")
                        .HasColumnName("PO_Id");

                    b.Property<int?>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("QTY");

                    b.Property<double?>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<string>("Uom")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("UOM");

                    b.ToTable("TM_PurchaseBody");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TmPurchaseHead", b =>
                {
                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Creation_Date");

                    b.Property<int?>("CuserId")
                        .HasColumnType("int")
                        .HasColumnName("CUser_Id");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("date");

                    b.Property<string>("DeliveryMode")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Enduser")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)");

                    b.Property<string>("FreightTerms")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)");

                    b.Property<string>("Gst")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("IndentNo")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Modification_Date");

                    b.Property<int?>("MuserId")
                        .HasColumnType("int")
                        .HasColumnName("MUser_Id");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("date");

                    b.Property<string>("PaymentTerms")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)");

                    b.Property<int?>("PoId")
                        .HasColumnType("int")
                        .HasColumnName("PO_Id");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.Property<string>("WorkOrderNo")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)");

                    b.ToTable("TM_PurchaseHead");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TmStateMaster", b =>
                {
                    b.Property<int>("Countrycode")
                        .HasColumnType("int")
                        .HasColumnName("COUNTRYCODE");

                    b.Property<DateTime>("Creationdate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("CREATIONDATE");

                    b.Property<string>("Deleted")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("DisplayAs")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Editable")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime>("Modificationdate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("MODIFICATIONDATE");

                    b.Property<int>("Statecode")
                        .HasColumnType("int")
                        .HasColumnName("STATECODE");

                    b.Property<string>("Statename")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("STATENAME");

                    b.Property<int>("Usercode")
                        .HasColumnType("int")
                        .HasColumnName("USERCODE");

                    b.ToTable("TM_StateMaster");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TmSupplierMaster", b =>
                {
                    b.Property<string>("Address1")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)");

                    b.Property<string>("Address2")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)");

                    b.Property<string>("Address3")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)");

                    b.Property<string>("CmobileNo")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("CMobileNo");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Creation_Date");

                    b.Property<int?>("CuserId")
                        .HasColumnType("int")
                        .HasColumnName("CUser_Id");

                    b.Property<string>("Gst")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("GST");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Modification_Date");

                    b.Property<int?>("MuserId")
                        .HasColumnType("int")
                        .HasColumnName("MUser_Id");

                    b.Property<string>("RecordStatus")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.ToTable("Tm_supplierMaster");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TmUserMaster", b =>
                {
                    b.Property<string>("AccountStatus")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Creation_Date");

                    b.Property<int?>("CuserId")
                        .HasColumnType("int")
                        .HasColumnName("CUser_Id");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("DuserCode")
                        .HasColumnType("int")
                        .HasColumnName("DUserCode");

                    b.Property<string>("EmailId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EmailID");

                    b.Property<string>("FromTime")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FromTimeAmPm")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("FromTime_AM_PM");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("Group_Id");

                    b.Property<DateTime?>("LastLoginDateTime")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("lastLoginDateTime");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Modification_Date");

                    b.Property<int?>("MuserId")
                        .HasColumnType("int")
                        .HasColumnName("MUser_Id");

                    b.Property<string>("ReasonForDeletion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Recordstatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ReportingManager")
                        .HasColumnType("int");

                    b.Property<int>("Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ToTime")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ToTimeAmPm")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ToTime_AM_PM");

                    b.Property<string>("Upassword")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("UPassword");

                    b.Property<int?>("UserCode")
                        .HasColumnType("int")
                        .HasColumnName("User_Code");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UserID");

                    b.Property<string>("UserImage")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("TM_UserMaster");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TransportType", b =>
                {
                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("TransportTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("smalldatetime");

                    b.ToTable("TransportTypes");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TransporttypeVsRate", b =>
                {
                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TransportTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("smalldatetime");

                    b.ToTable("TransporttypeVsRate");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.TransporttypeVsRate1", b =>
                {
                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TransportTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("datetime");

                    b.ToTable("TransporttypeVsRate", "nexionau_crm");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.VwDashBoard", b =>
                {
                    b.Property<double?>("Approved")
                        .HasColumnType("float");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<double?>("Paid")
                        .HasColumnType("float");

                    b.Property<double?>("Submit")
                        .HasColumnType("float");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToView("vw_DashBoard");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.VwDashBoard1", b =>
                {
                    b.Property<double?>("Approved")
                        .HasColumnType("float");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<double?>("Paid")
                        .HasColumnType("float");

                    b.Property<double?>("Submit")
                        .HasColumnType("float");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToView("vw_DashBoard", "nexionau_crm");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.VwLocalDashBoardDatum", b =>
                {
                    b.Property<double>("Approved")
                        .HasColumnType("float");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("createdBy");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<double>("Paid")
                        .HasColumnType("float");

                    b.Property<double>("Pending")
                        .HasColumnType("float");

                    b.Property<double>("Submit")
                        .HasColumnType("float");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToView("vw_LocalDashBoardData");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.VwLocalDashBoardDatum1", b =>
                {
                    b.Property<double>("Approved")
                        .HasColumnType("float");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("createdBy");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<double>("Paid")
                        .HasColumnType("float");

                    b.Property<double>("Pending")
                        .HasColumnType("float");

                    b.Property<double>("Submit")
                        .HasColumnType("float");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToView("vw_LocalDashBoardData", "nexionau_crm");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.VwLocalExpense", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<double?>("ApprovedAmount")
                        .HasColumnType("float");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("createdBy");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("ExpenseId")
                        .HasColumnType("bigint");

                    b.Property<string>("PeriodForm")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("PeriodTo")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Statusname")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("statusname");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("vw_LocalExpense");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.VwLocalExpense1", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<double?>("ApprovedAmount")
                        .HasColumnType("float");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("createdBy");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("ExpenseId")
                        .HasColumnType("bigint");

                    b.Property<string>("PeriodForm")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("PeriodTo")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Statusname")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("statusname");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("vw_LocalExpense", "nexionau_crm");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.VwLocalExpenseComment", b =>
                {
                    b.Property<string>("Comments")
                        .HasMaxLength(356)
                        .IsUnicode(false)
                        .HasColumnType("varchar(356)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("Vw_LocalExpenseComments");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.VwLocalExpenseComment1", b =>
                {
                    b.Property<string>("Comments")
                        .HasMaxLength(356)
                        .IsUnicode(false)
                        .HasColumnType("varchar(356)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("Vw_LocalExpenseComments", "nexionau_crm");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.VwOutStationDashBoardDatum", b =>
                {
                    b.Property<double>("Approved")
                        .HasColumnType("float");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("createdBy");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<double>("Paid")
                        .HasColumnType("float");

                    b.Property<double>("Pending")
                        .HasColumnType("float");

                    b.Property<double>("Submit")
                        .HasColumnType("float");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToView("vw_OutStationDashBoardData");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.VwOutStationDashBoardDatum1", b =>
                {
                    b.Property<double>("Approved")
                        .HasColumnType("float");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("createdBy");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<double>("Paid")
                        .HasColumnType("float");

                    b.Property<double>("Pending")
                        .HasColumnType("float");

                    b.Property<double>("Submit")
                        .HasColumnType("float");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToView("vw_OutStationDashBoardData", "nexionau_crm");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.VwOutStationExpense", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<double?>("ApprovedAmount")
                        .HasColumnType("float");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("createdBy");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("ExpenseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PeriodForm")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("PeriodTo")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Statusname")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("statusname");

                    b.Property<string>("Title")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WorkOrderId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("vw_OutStationExpense");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.VwOutStationExpense1", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<double?>("ApprovedAmount")
                        .HasColumnType("float");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("createdBy");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("ExpenseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PeriodForm")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("PeriodTo")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Statusname")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("statusname");

                    b.Property<string>("Title")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WorkOrderId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("vw_OutStationExpense", "nexionau_crm");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.VwOutstationExpenseComment", b =>
                {
                    b.Property<string>("Comments")
                        .HasMaxLength(356)
                        .IsUnicode(false)
                        .HasColumnType("varchar(356)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("Vw_outstationExpenseComments");
                });

            modelBuilder.Entity("GraphQl.DATA.API.PO.Model.VwOutstationExpenseComment1", b =>
                {
                    b.Property<string>("Comments")
                        .HasMaxLength(356)
                        .IsUnicode(false)
                        .HasColumnType("varchar(356)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("Vw_outstationExpenseComments", "nexionau_crm");
                });
#pragma warning restore 612, 618
        }
    }
}
